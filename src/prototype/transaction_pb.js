/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var prototype_type_pb = require('../prototype/type_pb.js');
var prototype_operation_pb = require('../prototype/operation_pb.js');
goog.exportSymbol('proto.prototype.block_header', null, global);
goog.exportSymbol('proto.prototype.empty_signed_block', null, global);
goog.exportSymbol('proto.prototype.estimate_trx_result', null, global);
goog.exportSymbol('proto.prototype.operation', null, global);
goog.exportSymbol('proto.prototype.operation_receipt', null, global);
goog.exportSymbol('proto.prototype.operation_receipt_with_info', null, global);
goog.exportSymbol('proto.prototype.signed_block', null, global);
goog.exportSymbol('proto.prototype.signed_block_header', null, global);
goog.exportSymbol('proto.prototype.signed_transaction', null, global);
goog.exportSymbol('proto.prototype.transaction', null, global);
goog.exportSymbol('proto.prototype.transaction_receipt', null, global);
goog.exportSymbol('proto.prototype.transaction_receipt_with_info', null, global);
goog.exportSymbol('proto.prototype.transaction_wrapper', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prototype.operation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.prototype.operation.oneofGroups_);
};
goog.inherits(proto.prototype.operation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.prototype.operation.displayName = 'proto.prototype.operation';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.prototype.operation.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]];

/**
 * @enum {number}
 */
proto.prototype.operation.OpCase = {
  OP_NOT_SET: 0,
  OP1: 1,
  OP2: 2,
  OP3: 3,
  OP4: 4,
  OP5: 5,
  OP6: 6,
  OP7: 7,
  OP8: 8,
  OP9: 9,
  OP10: 10,
  OP11: 11,
  OP12: 12,
  OP13: 13,
  OP14: 14,
  OP15: 15,
  OP16: 16
};

/**
 * @return {proto.prototype.operation.OpCase}
 */
proto.prototype.operation.prototype.getOpCase = function() {
  return /** @type {proto.prototype.operation.OpCase} */(jspb.Message.computeOneofCase(this, proto.prototype.operation.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prototype.operation.prototype.toObject = function(opt_includeInstance) {
  return proto.prototype.operation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prototype.operation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.operation.toObject = function(includeInstance, msg) {
  var f, obj = {
    op1: (f = msg.getOp1()) && prototype_operation_pb.account_create_operation.toObject(includeInstance, f),
    op2: (f = msg.getOp2()) && prototype_operation_pb.transfer_operation.toObject(includeInstance, f),
    op3: (f = msg.getOp3()) && prototype_operation_pb.bp_register_operation.toObject(includeInstance, f),
    op4: (f = msg.getOp4()) && prototype_operation_pb.bp_unregister_operation.toObject(includeInstance, f),
    op5: (f = msg.getOp5()) && prototype_operation_pb.bp_vote_operation.toObject(includeInstance, f),
    op6: (f = msg.getOp6()) && prototype_operation_pb.post_operation.toObject(includeInstance, f),
    op7: (f = msg.getOp7()) && prototype_operation_pb.reply_operation.toObject(includeInstance, f),
    op8: (f = msg.getOp8()) && prototype_operation_pb.follow_operation.toObject(includeInstance, f),
    op9: (f = msg.getOp9()) && prototype_operation_pb.vote_operation.toObject(includeInstance, f),
    op10: (f = msg.getOp10()) && prototype_operation_pb.transfer_to_vesting_operation.toObject(includeInstance, f),
    op11: (f = msg.getOp11()) && prototype_operation_pb.claim_operation.toObject(includeInstance, f),
    op12: (f = msg.getOp12()) && prototype_operation_pb.claim_all_operation.toObject(includeInstance, f),
    op13: (f = msg.getOp13()) && prototype_operation_pb.contract_deploy_operation.toObject(includeInstance, f),
    op14: (f = msg.getOp14()) && prototype_operation_pb.contract_apply_operation.toObject(includeInstance, f),
    op15: (f = msg.getOp15()) && prototype_operation_pb.report_operation.toObject(includeInstance, f),
    op16: (f = msg.getOp16()) && prototype_operation_pb.convert_vesting_operation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prototype.operation}
 */
proto.prototype.operation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prototype.operation;
  return proto.prototype.operation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prototype.operation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prototype.operation}
 */
proto.prototype.operation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prototype_operation_pb.account_create_operation;
      reader.readMessage(value,prototype_operation_pb.account_create_operation.deserializeBinaryFromReader);
      msg.setOp1(value);
      break;
    case 2:
      var value = new prototype_operation_pb.transfer_operation;
      reader.readMessage(value,prototype_operation_pb.transfer_operation.deserializeBinaryFromReader);
      msg.setOp2(value);
      break;
    case 3:
      var value = new prototype_operation_pb.bp_register_operation;
      reader.readMessage(value,prototype_operation_pb.bp_register_operation.deserializeBinaryFromReader);
      msg.setOp3(value);
      break;
    case 4:
      var value = new prototype_operation_pb.bp_unregister_operation;
      reader.readMessage(value,prototype_operation_pb.bp_unregister_operation.deserializeBinaryFromReader);
      msg.setOp4(value);
      break;
    case 5:
      var value = new prototype_operation_pb.bp_vote_operation;
      reader.readMessage(value,prototype_operation_pb.bp_vote_operation.deserializeBinaryFromReader);
      msg.setOp5(value);
      break;
    case 6:
      var value = new prototype_operation_pb.post_operation;
      reader.readMessage(value,prototype_operation_pb.post_operation.deserializeBinaryFromReader);
      msg.setOp6(value);
      break;
    case 7:
      var value = new prototype_operation_pb.reply_operation;
      reader.readMessage(value,prototype_operation_pb.reply_operation.deserializeBinaryFromReader);
      msg.setOp7(value);
      break;
    case 8:
      var value = new prototype_operation_pb.follow_operation;
      reader.readMessage(value,prototype_operation_pb.follow_operation.deserializeBinaryFromReader);
      msg.setOp8(value);
      break;
    case 9:
      var value = new prototype_operation_pb.vote_operation;
      reader.readMessage(value,prototype_operation_pb.vote_operation.deserializeBinaryFromReader);
      msg.setOp9(value);
      break;
    case 10:
      var value = new prototype_operation_pb.transfer_to_vesting_operation;
      reader.readMessage(value,prototype_operation_pb.transfer_to_vesting_operation.deserializeBinaryFromReader);
      msg.setOp10(value);
      break;
    case 11:
      var value = new prototype_operation_pb.claim_operation;
      reader.readMessage(value,prototype_operation_pb.claim_operation.deserializeBinaryFromReader);
      msg.setOp11(value);
      break;
    case 12:
      var value = new prototype_operation_pb.claim_all_operation;
      reader.readMessage(value,prototype_operation_pb.claim_all_operation.deserializeBinaryFromReader);
      msg.setOp12(value);
      break;
    case 13:
      var value = new prototype_operation_pb.contract_deploy_operation;
      reader.readMessage(value,prototype_operation_pb.contract_deploy_operation.deserializeBinaryFromReader);
      msg.setOp13(value);
      break;
    case 14:
      var value = new prototype_operation_pb.contract_apply_operation;
      reader.readMessage(value,prototype_operation_pb.contract_apply_operation.deserializeBinaryFromReader);
      msg.setOp14(value);
      break;
    case 15:
      var value = new prototype_operation_pb.report_operation;
      reader.readMessage(value,prototype_operation_pb.report_operation.deserializeBinaryFromReader);
      msg.setOp15(value);
      break;
    case 16:
      var value = new prototype_operation_pb.convert_vesting_operation;
      reader.readMessage(value,prototype_operation_pb.convert_vesting_operation.deserializeBinaryFromReader);
      msg.setOp16(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prototype.operation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prototype.operation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prototype.operation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.operation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOp1();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prototype_operation_pb.account_create_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp2();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      prototype_operation_pb.transfer_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp3();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      prototype_operation_pb.bp_register_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp4();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      prototype_operation_pb.bp_unregister_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp5();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      prototype_operation_pb.bp_vote_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp6();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      prototype_operation_pb.post_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp7();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      prototype_operation_pb.reply_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp8();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      prototype_operation_pb.follow_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp9();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      prototype_operation_pb.vote_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp10();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      prototype_operation_pb.transfer_to_vesting_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp11();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      prototype_operation_pb.claim_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp12();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      prototype_operation_pb.claim_all_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp13();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      prototype_operation_pb.contract_deploy_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp14();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      prototype_operation_pb.contract_apply_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp15();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      prototype_operation_pb.report_operation.serializeBinaryToWriter
    );
  }
  f = message.getOp16();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      prototype_operation_pb.convert_vesting_operation.serializeBinaryToWriter
    );
  }
};


/**
 * optional account_create_operation op1 = 1;
 * @return {?proto.prototype.account_create_operation}
 */
proto.prototype.operation.prototype.getOp1 = function() {
  return /** @type{?proto.prototype.account_create_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.account_create_operation, 1));
};


/** @param {?proto.prototype.account_create_operation|undefined} value */
proto.prototype.operation.prototype.setOp1 = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp1 = function() {
  this.setOp1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp1 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional transfer_operation op2 = 2;
 * @return {?proto.prototype.transfer_operation}
 */
proto.prototype.operation.prototype.getOp2 = function() {
  return /** @type{?proto.prototype.transfer_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.transfer_operation, 2));
};


/** @param {?proto.prototype.transfer_operation|undefined} value */
proto.prototype.operation.prototype.setOp2 = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp2 = function() {
  this.setOp2(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bp_register_operation op3 = 3;
 * @return {?proto.prototype.bp_register_operation}
 */
proto.prototype.operation.prototype.getOp3 = function() {
  return /** @type{?proto.prototype.bp_register_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.bp_register_operation, 3));
};


/** @param {?proto.prototype.bp_register_operation|undefined} value */
proto.prototype.operation.prototype.setOp3 = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp3 = function() {
  this.setOp3(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp3 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bp_unregister_operation op4 = 4;
 * @return {?proto.prototype.bp_unregister_operation}
 */
proto.prototype.operation.prototype.getOp4 = function() {
  return /** @type{?proto.prototype.bp_unregister_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.bp_unregister_operation, 4));
};


/** @param {?proto.prototype.bp_unregister_operation|undefined} value */
proto.prototype.operation.prototype.setOp4 = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp4 = function() {
  this.setOp4(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp4 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bp_vote_operation op5 = 5;
 * @return {?proto.prototype.bp_vote_operation}
 */
proto.prototype.operation.prototype.getOp5 = function() {
  return /** @type{?proto.prototype.bp_vote_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.bp_vote_operation, 5));
};


/** @param {?proto.prototype.bp_vote_operation|undefined} value */
proto.prototype.operation.prototype.setOp5 = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp5 = function() {
  this.setOp5(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp5 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional post_operation op6 = 6;
 * @return {?proto.prototype.post_operation}
 */
proto.prototype.operation.prototype.getOp6 = function() {
  return /** @type{?proto.prototype.post_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.post_operation, 6));
};


/** @param {?proto.prototype.post_operation|undefined} value */
proto.prototype.operation.prototype.setOp6 = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp6 = function() {
  this.setOp6(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp6 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional reply_operation op7 = 7;
 * @return {?proto.prototype.reply_operation}
 */
proto.prototype.operation.prototype.getOp7 = function() {
  return /** @type{?proto.prototype.reply_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.reply_operation, 7));
};


/** @param {?proto.prototype.reply_operation|undefined} value */
proto.prototype.operation.prototype.setOp7 = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp7 = function() {
  this.setOp7(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp7 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional follow_operation op8 = 8;
 * @return {?proto.prototype.follow_operation}
 */
proto.prototype.operation.prototype.getOp8 = function() {
  return /** @type{?proto.prototype.follow_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.follow_operation, 8));
};


/** @param {?proto.prototype.follow_operation|undefined} value */
proto.prototype.operation.prototype.setOp8 = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp8 = function() {
  this.setOp8(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp8 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional vote_operation op9 = 9;
 * @return {?proto.prototype.vote_operation}
 */
proto.prototype.operation.prototype.getOp9 = function() {
  return /** @type{?proto.prototype.vote_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.vote_operation, 9));
};


/** @param {?proto.prototype.vote_operation|undefined} value */
proto.prototype.operation.prototype.setOp9 = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp9 = function() {
  this.setOp9(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp9 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional transfer_to_vesting_operation op10 = 10;
 * @return {?proto.prototype.transfer_to_vesting_operation}
 */
proto.prototype.operation.prototype.getOp10 = function() {
  return /** @type{?proto.prototype.transfer_to_vesting_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.transfer_to_vesting_operation, 10));
};


/** @param {?proto.prototype.transfer_to_vesting_operation|undefined} value */
proto.prototype.operation.prototype.setOp10 = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp10 = function() {
  this.setOp10(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp10 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional claim_operation op11 = 11;
 * @return {?proto.prototype.claim_operation}
 */
proto.prototype.operation.prototype.getOp11 = function() {
  return /** @type{?proto.prototype.claim_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.claim_operation, 11));
};


/** @param {?proto.prototype.claim_operation|undefined} value */
proto.prototype.operation.prototype.setOp11 = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp11 = function() {
  this.setOp11(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp11 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional claim_all_operation op12 = 12;
 * @return {?proto.prototype.claim_all_operation}
 */
proto.prototype.operation.prototype.getOp12 = function() {
  return /** @type{?proto.prototype.claim_all_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.claim_all_operation, 12));
};


/** @param {?proto.prototype.claim_all_operation|undefined} value */
proto.prototype.operation.prototype.setOp12 = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp12 = function() {
  this.setOp12(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp12 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional contract_deploy_operation op13 = 13;
 * @return {?proto.prototype.contract_deploy_operation}
 */
proto.prototype.operation.prototype.getOp13 = function() {
  return /** @type{?proto.prototype.contract_deploy_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.contract_deploy_operation, 13));
};


/** @param {?proto.prototype.contract_deploy_operation|undefined} value */
proto.prototype.operation.prototype.setOp13 = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp13 = function() {
  this.setOp13(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp13 = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional contract_apply_operation op14 = 14;
 * @return {?proto.prototype.contract_apply_operation}
 */
proto.prototype.operation.prototype.getOp14 = function() {
  return /** @type{?proto.prototype.contract_apply_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.contract_apply_operation, 14));
};


/** @param {?proto.prototype.contract_apply_operation|undefined} value */
proto.prototype.operation.prototype.setOp14 = function(value) {
  jspb.Message.setOneofWrapperField(this, 14, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp14 = function() {
  this.setOp14(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp14 = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional report_operation op15 = 15;
 * @return {?proto.prototype.report_operation}
 */
proto.prototype.operation.prototype.getOp15 = function() {
  return /** @type{?proto.prototype.report_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.report_operation, 15));
};


/** @param {?proto.prototype.report_operation|undefined} value */
proto.prototype.operation.prototype.setOp15 = function(value) {
  jspb.Message.setOneofWrapperField(this, 15, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp15 = function() {
  this.setOp15(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp15 = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional convert_vesting_operation op16 = 16;
 * @return {?proto.prototype.convert_vesting_operation}
 */
proto.prototype.operation.prototype.getOp16 = function() {
  return /** @type{?proto.prototype.convert_vesting_operation} */ (
    jspb.Message.getWrapperField(this, prototype_operation_pb.convert_vesting_operation, 16));
};


/** @param {?proto.prototype.convert_vesting_operation|undefined} value */
proto.prototype.operation.prototype.setOp16 = function(value) {
  jspb.Message.setOneofWrapperField(this, 16, proto.prototype.operation.oneofGroups_[0], value);
};


proto.prototype.operation.prototype.clearOp16 = function() {
  this.setOp16(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.operation.prototype.hasOp16 = function() {
  return jspb.Message.getField(this, 16) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prototype.transaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prototype.transaction.repeatedFields_, null);
};
goog.inherits(proto.prototype.transaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.prototype.transaction.displayName = 'proto.prototype.transaction';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prototype.transaction.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prototype.transaction.prototype.toObject = function(opt_includeInstance) {
  return proto.prototype.transaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prototype.transaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.transaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    refBlockNum: jspb.Message.getFieldWithDefault(msg, 1, 0),
    refBlockPrefix: jspb.Message.getFieldWithDefault(msg, 2, 0),
    expiration: (f = msg.getExpiration()) && prototype_type_pb.time_point_sec.toObject(includeInstance, f),
    operationsList: jspb.Message.toObjectList(msg.getOperationsList(),
    proto.prototype.operation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prototype.transaction}
 */
proto.prototype.transaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prototype.transaction;
  return proto.prototype.transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prototype.transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prototype.transaction}
 */
proto.prototype.transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRefBlockNum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRefBlockPrefix(value);
      break;
    case 3:
      var value = new prototype_type_pb.time_point_sec;
      reader.readMessage(value,prototype_type_pb.time_point_sec.deserializeBinaryFromReader);
      msg.setExpiration(value);
      break;
    case 4:
      var value = new proto.prototype.operation;
      reader.readMessage(value,proto.prototype.operation.deserializeBinaryFromReader);
      msg.addOperations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prototype.transaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prototype.transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prototype.transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRefBlockNum();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getRefBlockPrefix();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getExpiration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      prototype_type_pb.time_point_sec.serializeBinaryToWriter
    );
  }
  f = message.getOperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.prototype.operation.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 ref_block_num = 1;
 * @return {number}
 */
proto.prototype.transaction.prototype.getRefBlockNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.prototype.transaction.prototype.setRefBlockNum = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 ref_block_prefix = 2;
 * @return {number}
 */
proto.prototype.transaction.prototype.getRefBlockPrefix = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.prototype.transaction.prototype.setRefBlockPrefix = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional time_point_sec expiration = 3;
 * @return {?proto.prototype.time_point_sec}
 */
proto.prototype.transaction.prototype.getExpiration = function() {
  return /** @type{?proto.prototype.time_point_sec} */ (
    jspb.Message.getWrapperField(this, prototype_type_pb.time_point_sec, 3));
};


/** @param {?proto.prototype.time_point_sec|undefined} value */
proto.prototype.transaction.prototype.setExpiration = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.prototype.transaction.prototype.clearExpiration = function() {
  this.setExpiration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.transaction.prototype.hasExpiration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated operation operations = 4;
 * @return {!Array<!proto.prototype.operation>}
 */
proto.prototype.transaction.prototype.getOperationsList = function() {
  return /** @type{!Array<!proto.prototype.operation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prototype.operation, 4));
};


/** @param {!Array<!proto.prototype.operation>} value */
proto.prototype.transaction.prototype.setOperationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.prototype.operation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prototype.operation}
 */
proto.prototype.transaction.prototype.addOperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.prototype.operation, opt_index);
};


proto.prototype.transaction.prototype.clearOperationsList = function() {
  this.setOperationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prototype.signed_transaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prototype.signed_transaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.prototype.signed_transaction.displayName = 'proto.prototype.signed_transaction';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prototype.signed_transaction.prototype.toObject = function(opt_includeInstance) {
  return proto.prototype.signed_transaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prototype.signed_transaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.signed_transaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    trx: (f = msg.getTrx()) && proto.prototype.transaction.toObject(includeInstance, f),
    signature: (f = msg.getSignature()) && prototype_type_pb.signature_type.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prototype.signed_transaction}
 */
proto.prototype.signed_transaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prototype.signed_transaction;
  return proto.prototype.signed_transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prototype.signed_transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prototype.signed_transaction}
 */
proto.prototype.signed_transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prototype.transaction;
      reader.readMessage(value,proto.prototype.transaction.deserializeBinaryFromReader);
      msg.setTrx(value);
      break;
    case 2:
      var value = new prototype_type_pb.signature_type;
      reader.readMessage(value,prototype_type_pb.signature_type.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prototype.signed_transaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prototype.signed_transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prototype.signed_transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.signed_transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrx();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.prototype.transaction.serializeBinaryToWriter
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      prototype_type_pb.signature_type.serializeBinaryToWriter
    );
  }
};


/**
 * optional transaction trx = 1;
 * @return {?proto.prototype.transaction}
 */
proto.prototype.signed_transaction.prototype.getTrx = function() {
  return /** @type{?proto.prototype.transaction} */ (
    jspb.Message.getWrapperField(this, proto.prototype.transaction, 1));
};


/** @param {?proto.prototype.transaction|undefined} value */
proto.prototype.signed_transaction.prototype.setTrx = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.prototype.signed_transaction.prototype.clearTrx = function() {
  this.setTrx(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.signed_transaction.prototype.hasTrx = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional signature_type signature = 2;
 * @return {?proto.prototype.signature_type}
 */
proto.prototype.signed_transaction.prototype.getSignature = function() {
  return /** @type{?proto.prototype.signature_type} */ (
    jspb.Message.getWrapperField(this, prototype_type_pb.signature_type, 2));
};


/** @param {?proto.prototype.signature_type|undefined} value */
proto.prototype.signed_transaction.prototype.setSignature = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.prototype.signed_transaction.prototype.clearSignature = function() {
  this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.signed_transaction.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prototype.operation_receipt_with_info = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prototype.operation_receipt_with_info, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.prototype.operation_receipt_with_info.displayName = 'proto.prototype.operation_receipt_with_info';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prototype.operation_receipt_with_info.prototype.toObject = function(opt_includeInstance) {
  return proto.prototype.operation_receipt_with_info.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prototype.operation_receipt_with_info} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.operation_receipt_with_info.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gasUsage: jspb.Message.getFieldWithDefault(msg, 5, 0),
    vmConsole: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prototype.operation_receipt_with_info}
 */
proto.prototype.operation_receipt_with_info.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prototype.operation_receipt_with_info;
  return proto.prototype.operation_receipt_with_info.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prototype.operation_receipt_with_info} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prototype.operation_receipt_with_info}
 */
proto.prototype.operation_receipt_with_info.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGasUsage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVmConsole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prototype.operation_receipt_with_info.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prototype.operation_receipt_with_info.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prototype.operation_receipt_with_info} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.operation_receipt_with_info.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getGasUsage();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getVmConsole();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional uint32 status = 1;
 * @return {number}
 */
proto.prototype.operation_receipt_with_info.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.prototype.operation_receipt_with_info.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 gas_usage = 5;
 * @return {number}
 */
proto.prototype.operation_receipt_with_info.prototype.getGasUsage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.prototype.operation_receipt_with_info.prototype.setGasUsage = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string vm_console = 6;
 * @return {string}
 */
proto.prototype.operation_receipt_with_info.prototype.getVmConsole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.prototype.operation_receipt_with_info.prototype.setVmConsole = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prototype.operation_receipt = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prototype.operation_receipt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.prototype.operation_receipt.displayName = 'proto.prototype.operation_receipt';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prototype.operation_receipt.prototype.toObject = function(opt_includeInstance) {
  return proto.prototype.operation_receipt.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prototype.operation_receipt} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.operation_receipt.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prototype.operation_receipt}
 */
proto.prototype.operation_receipt.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prototype.operation_receipt;
  return proto.prototype.operation_receipt.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prototype.operation_receipt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prototype.operation_receipt}
 */
proto.prototype.operation_receipt.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prototype.operation_receipt.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prototype.operation_receipt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prototype.operation_receipt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.operation_receipt.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 status = 1;
 * @return {number}
 */
proto.prototype.operation_receipt.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.prototype.operation_receipt.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prototype.transaction_receipt = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prototype.transaction_receipt.repeatedFields_, null);
};
goog.inherits(proto.prototype.transaction_receipt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.prototype.transaction_receipt.displayName = 'proto.prototype.transaction_receipt';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prototype.transaction_receipt.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prototype.transaction_receipt.prototype.toObject = function(opt_includeInstance) {
  return proto.prototype.transaction_receipt.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prototype.transaction_receipt} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.transaction_receipt.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalGasUsage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    opResultsList: jspb.Message.toObjectList(msg.getOpResultsList(),
    proto.prototype.operation_receipt.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prototype.transaction_receipt}
 */
proto.prototype.transaction_receipt.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prototype.transaction_receipt;
  return proto.prototype.transaction_receipt.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prototype.transaction_receipt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prototype.transaction_receipt}
 */
proto.prototype.transaction_receipt.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalGasUsage(value);
      break;
    case 3:
      var value = new proto.prototype.operation_receipt;
      reader.readMessage(value,proto.prototype.operation_receipt.deserializeBinaryFromReader);
      msg.addOpResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prototype.transaction_receipt.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prototype.transaction_receipt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prototype.transaction_receipt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.transaction_receipt.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTotalGasUsage();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getOpResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.prototype.operation_receipt.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 status = 1;
 * @return {number}
 */
proto.prototype.transaction_receipt.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.prototype.transaction_receipt.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 total_gas_usage = 2;
 * @return {number}
 */
proto.prototype.transaction_receipt.prototype.getTotalGasUsage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.prototype.transaction_receipt.prototype.setTotalGasUsage = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated operation_receipt op_results = 3;
 * @return {!Array<!proto.prototype.operation_receipt>}
 */
proto.prototype.transaction_receipt.prototype.getOpResultsList = function() {
  return /** @type{!Array<!proto.prototype.operation_receipt>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prototype.operation_receipt, 3));
};


/** @param {!Array<!proto.prototype.operation_receipt>} value */
proto.prototype.transaction_receipt.prototype.setOpResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.prototype.operation_receipt=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prototype.operation_receipt}
 */
proto.prototype.transaction_receipt.prototype.addOpResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.prototype.operation_receipt, opt_index);
};


proto.prototype.transaction_receipt.prototype.clearOpResultsList = function() {
  this.setOpResultsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prototype.transaction_receipt_with_info = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prototype.transaction_receipt_with_info.repeatedFields_, null);
};
goog.inherits(proto.prototype.transaction_receipt_with_info, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.prototype.transaction_receipt_with_info.displayName = 'proto.prototype.transaction_receipt_with_info';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prototype.transaction_receipt_with_info.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prototype.transaction_receipt_with_info.prototype.toObject = function(opt_includeInstance) {
  return proto.prototype.transaction_receipt_with_info.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prototype.transaction_receipt_with_info} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.transaction_receipt_with_info.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalGasUsage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    errorInfo: jspb.Message.getFieldWithDefault(msg, 3, ""),
    opResultsList: jspb.Message.toObjectList(msg.getOpResultsList(),
    proto.prototype.operation_receipt_with_info.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prototype.transaction_receipt_with_info}
 */
proto.prototype.transaction_receipt_with_info.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prototype.transaction_receipt_with_info;
  return proto.prototype.transaction_receipt_with_info.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prototype.transaction_receipt_with_info} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prototype.transaction_receipt_with_info}
 */
proto.prototype.transaction_receipt_with_info.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalGasUsage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorInfo(value);
      break;
    case 4:
      var value = new proto.prototype.operation_receipt_with_info;
      reader.readMessage(value,proto.prototype.operation_receipt_with_info.deserializeBinaryFromReader);
      msg.addOpResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prototype.transaction_receipt_with_info.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prototype.transaction_receipt_with_info.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prototype.transaction_receipt_with_info} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.transaction_receipt_with_info.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTotalGasUsage();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getErrorInfo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOpResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.prototype.operation_receipt_with_info.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 status = 1;
 * @return {number}
 */
proto.prototype.transaction_receipt_with_info.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.prototype.transaction_receipt_with_info.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 total_gas_usage = 2;
 * @return {number}
 */
proto.prototype.transaction_receipt_with_info.prototype.getTotalGasUsage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.prototype.transaction_receipt_with_info.prototype.setTotalGasUsage = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string error_info = 3;
 * @return {string}
 */
proto.prototype.transaction_receipt_with_info.prototype.getErrorInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.prototype.transaction_receipt_with_info.prototype.setErrorInfo = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated operation_receipt_with_info op_results = 4;
 * @return {!Array<!proto.prototype.operation_receipt_with_info>}
 */
proto.prototype.transaction_receipt_with_info.prototype.getOpResultsList = function() {
  return /** @type{!Array<!proto.prototype.operation_receipt_with_info>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prototype.operation_receipt_with_info, 4));
};


/** @param {!Array<!proto.prototype.operation_receipt_with_info>} value */
proto.prototype.transaction_receipt_with_info.prototype.setOpResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.prototype.operation_receipt_with_info=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prototype.operation_receipt_with_info}
 */
proto.prototype.transaction_receipt_with_info.prototype.addOpResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.prototype.operation_receipt_with_info, opt_index);
};


proto.prototype.transaction_receipt_with_info.prototype.clearOpResultsList = function() {
  this.setOpResultsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prototype.estimate_trx_result = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prototype.estimate_trx_result, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.prototype.estimate_trx_result.displayName = 'proto.prototype.estimate_trx_result';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prototype.estimate_trx_result.prototype.toObject = function(opt_includeInstance) {
  return proto.prototype.estimate_trx_result.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prototype.estimate_trx_result} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.estimate_trx_result.toObject = function(includeInstance, msg) {
  var f, obj = {
    sigTrx: (f = msg.getSigTrx()) && proto.prototype.signed_transaction.toObject(includeInstance, f),
    receipt: (f = msg.getReceipt()) && proto.prototype.transaction_receipt_with_info.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prototype.estimate_trx_result}
 */
proto.prototype.estimate_trx_result.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prototype.estimate_trx_result;
  return proto.prototype.estimate_trx_result.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prototype.estimate_trx_result} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prototype.estimate_trx_result}
 */
proto.prototype.estimate_trx_result.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prototype.signed_transaction;
      reader.readMessage(value,proto.prototype.signed_transaction.deserializeBinaryFromReader);
      msg.setSigTrx(value);
      break;
    case 2:
      var value = new proto.prototype.transaction_receipt_with_info;
      reader.readMessage(value,proto.prototype.transaction_receipt_with_info.deserializeBinaryFromReader);
      msg.setReceipt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prototype.estimate_trx_result.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prototype.estimate_trx_result.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prototype.estimate_trx_result} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.estimate_trx_result.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSigTrx();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.prototype.signed_transaction.serializeBinaryToWriter
    );
  }
  f = message.getReceipt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.prototype.transaction_receipt_with_info.serializeBinaryToWriter
    );
  }
};


/**
 * optional signed_transaction sig_trx = 1;
 * @return {?proto.prototype.signed_transaction}
 */
proto.prototype.estimate_trx_result.prototype.getSigTrx = function() {
  return /** @type{?proto.prototype.signed_transaction} */ (
    jspb.Message.getWrapperField(this, proto.prototype.signed_transaction, 1));
};


/** @param {?proto.prototype.signed_transaction|undefined} value */
proto.prototype.estimate_trx_result.prototype.setSigTrx = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.prototype.estimate_trx_result.prototype.clearSigTrx = function() {
  this.setSigTrx(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.estimate_trx_result.prototype.hasSigTrx = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional transaction_receipt_with_info receipt = 2;
 * @return {?proto.prototype.transaction_receipt_with_info}
 */
proto.prototype.estimate_trx_result.prototype.getReceipt = function() {
  return /** @type{?proto.prototype.transaction_receipt_with_info} */ (
    jspb.Message.getWrapperField(this, proto.prototype.transaction_receipt_with_info, 2));
};


/** @param {?proto.prototype.transaction_receipt_with_info|undefined} value */
proto.prototype.estimate_trx_result.prototype.setReceipt = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.prototype.estimate_trx_result.prototype.clearReceipt = function() {
  this.setReceipt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.estimate_trx_result.prototype.hasReceipt = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prototype.transaction_wrapper = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prototype.transaction_wrapper, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.prototype.transaction_wrapper.displayName = 'proto.prototype.transaction_wrapper';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prototype.transaction_wrapper.prototype.toObject = function(opt_includeInstance) {
  return proto.prototype.transaction_wrapper.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prototype.transaction_wrapper} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.transaction_wrapper.toObject = function(includeInstance, msg) {
  var f, obj = {
    sigTrx: (f = msg.getSigTrx()) && proto.prototype.signed_transaction.toObject(includeInstance, f),
    invoice: (f = msg.getInvoice()) && proto.prototype.transaction_receipt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prototype.transaction_wrapper}
 */
proto.prototype.transaction_wrapper.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prototype.transaction_wrapper;
  return proto.prototype.transaction_wrapper.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prototype.transaction_wrapper} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prototype.transaction_wrapper}
 */
proto.prototype.transaction_wrapper.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prototype.signed_transaction;
      reader.readMessage(value,proto.prototype.signed_transaction.deserializeBinaryFromReader);
      msg.setSigTrx(value);
      break;
    case 2:
      var value = new proto.prototype.transaction_receipt;
      reader.readMessage(value,proto.prototype.transaction_receipt.deserializeBinaryFromReader);
      msg.setInvoice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prototype.transaction_wrapper.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prototype.transaction_wrapper.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prototype.transaction_wrapper} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.transaction_wrapper.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSigTrx();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.prototype.signed_transaction.serializeBinaryToWriter
    );
  }
  f = message.getInvoice();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.prototype.transaction_receipt.serializeBinaryToWriter
    );
  }
};


/**
 * optional signed_transaction sig_trx = 1;
 * @return {?proto.prototype.signed_transaction}
 */
proto.prototype.transaction_wrapper.prototype.getSigTrx = function() {
  return /** @type{?proto.prototype.signed_transaction} */ (
    jspb.Message.getWrapperField(this, proto.prototype.signed_transaction, 1));
};


/** @param {?proto.prototype.signed_transaction|undefined} value */
proto.prototype.transaction_wrapper.prototype.setSigTrx = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.prototype.transaction_wrapper.prototype.clearSigTrx = function() {
  this.setSigTrx(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.transaction_wrapper.prototype.hasSigTrx = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional transaction_receipt invoice = 2;
 * @return {?proto.prototype.transaction_receipt}
 */
proto.prototype.transaction_wrapper.prototype.getInvoice = function() {
  return /** @type{?proto.prototype.transaction_receipt} */ (
    jspb.Message.getWrapperField(this, proto.prototype.transaction_receipt, 2));
};


/** @param {?proto.prototype.transaction_receipt|undefined} value */
proto.prototype.transaction_wrapper.prototype.setInvoice = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.prototype.transaction_wrapper.prototype.clearInvoice = function() {
  this.setInvoice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.transaction_wrapper.prototype.hasInvoice = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prototype.block_header = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prototype.block_header, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.prototype.block_header.displayName = 'proto.prototype.block_header';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prototype.block_header.prototype.toObject = function(opt_includeInstance) {
  return proto.prototype.block_header.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prototype.block_header} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.block_header.toObject = function(includeInstance, msg) {
  var f, obj = {
    previous: (f = msg.getPrevious()) && prototype_type_pb.sha256.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && prototype_type_pb.time_point_sec.toObject(includeInstance, f),
    witness: (f = msg.getWitness()) && prototype_type_pb.account_name.toObject(includeInstance, f),
    transactionMerkleRoot: (f = msg.getTransactionMerkleRoot()) && prototype_type_pb.sha256.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prototype.block_header}
 */
proto.prototype.block_header.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prototype.block_header;
  return proto.prototype.block_header.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prototype.block_header} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prototype.block_header}
 */
proto.prototype.block_header.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new prototype_type_pb.sha256;
      reader.readMessage(value,prototype_type_pb.sha256.deserializeBinaryFromReader);
      msg.setPrevious(value);
      break;
    case 2:
      var value = new prototype_type_pb.time_point_sec;
      reader.readMessage(value,prototype_type_pb.time_point_sec.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = new prototype_type_pb.account_name;
      reader.readMessage(value,prototype_type_pb.account_name.deserializeBinaryFromReader);
      msg.setWitness(value);
      break;
    case 4:
      var value = new prototype_type_pb.sha256;
      reader.readMessage(value,prototype_type_pb.sha256.deserializeBinaryFromReader);
      msg.setTransactionMerkleRoot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prototype.block_header.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prototype.block_header.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prototype.block_header} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.block_header.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrevious();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      prototype_type_pb.sha256.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      prototype_type_pb.time_point_sec.serializeBinaryToWriter
    );
  }
  f = message.getWitness();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      prototype_type_pb.account_name.serializeBinaryToWriter
    );
  }
  f = message.getTransactionMerkleRoot();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      prototype_type_pb.sha256.serializeBinaryToWriter
    );
  }
};


/**
 * optional sha256 previous = 1;
 * @return {?proto.prototype.sha256}
 */
proto.prototype.block_header.prototype.getPrevious = function() {
  return /** @type{?proto.prototype.sha256} */ (
    jspb.Message.getWrapperField(this, prototype_type_pb.sha256, 1));
};


/** @param {?proto.prototype.sha256|undefined} value */
proto.prototype.block_header.prototype.setPrevious = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.prototype.block_header.prototype.clearPrevious = function() {
  this.setPrevious(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.block_header.prototype.hasPrevious = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional time_point_sec timestamp = 2;
 * @return {?proto.prototype.time_point_sec}
 */
proto.prototype.block_header.prototype.getTimestamp = function() {
  return /** @type{?proto.prototype.time_point_sec} */ (
    jspb.Message.getWrapperField(this, prototype_type_pb.time_point_sec, 2));
};


/** @param {?proto.prototype.time_point_sec|undefined} value */
proto.prototype.block_header.prototype.setTimestamp = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.prototype.block_header.prototype.clearTimestamp = function() {
  this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.block_header.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional account_name witness = 3;
 * @return {?proto.prototype.account_name}
 */
proto.prototype.block_header.prototype.getWitness = function() {
  return /** @type{?proto.prototype.account_name} */ (
    jspb.Message.getWrapperField(this, prototype_type_pb.account_name, 3));
};


/** @param {?proto.prototype.account_name|undefined} value */
proto.prototype.block_header.prototype.setWitness = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.prototype.block_header.prototype.clearWitness = function() {
  this.setWitness(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.block_header.prototype.hasWitness = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional sha256 transaction_merkle_root = 4;
 * @return {?proto.prototype.sha256}
 */
proto.prototype.block_header.prototype.getTransactionMerkleRoot = function() {
  return /** @type{?proto.prototype.sha256} */ (
    jspb.Message.getWrapperField(this, prototype_type_pb.sha256, 4));
};


/** @param {?proto.prototype.sha256|undefined} value */
proto.prototype.block_header.prototype.setTransactionMerkleRoot = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.prototype.block_header.prototype.clearTransactionMerkleRoot = function() {
  this.setTransactionMerkleRoot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.block_header.prototype.hasTransactionMerkleRoot = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prototype.signed_block_header = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prototype.signed_block_header, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.prototype.signed_block_header.displayName = 'proto.prototype.signed_block_header';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prototype.signed_block_header.prototype.toObject = function(opt_includeInstance) {
  return proto.prototype.signed_block_header.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prototype.signed_block_header} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.signed_block_header.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.prototype.block_header.toObject(includeInstance, f),
    witnessSignature: (f = msg.getWitnessSignature()) && prototype_type_pb.signature_type.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prototype.signed_block_header}
 */
proto.prototype.signed_block_header.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prototype.signed_block_header;
  return proto.prototype.signed_block_header.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prototype.signed_block_header} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prototype.signed_block_header}
 */
proto.prototype.signed_block_header.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prototype.block_header;
      reader.readMessage(value,proto.prototype.block_header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new prototype_type_pb.signature_type;
      reader.readMessage(value,prototype_type_pb.signature_type.deserializeBinaryFromReader);
      msg.setWitnessSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prototype.signed_block_header.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prototype.signed_block_header.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prototype.signed_block_header} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.signed_block_header.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.prototype.block_header.serializeBinaryToWriter
    );
  }
  f = message.getWitnessSignature();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      prototype_type_pb.signature_type.serializeBinaryToWriter
    );
  }
};


/**
 * optional block_header header = 1;
 * @return {?proto.prototype.block_header}
 */
proto.prototype.signed_block_header.prototype.getHeader = function() {
  return /** @type{?proto.prototype.block_header} */ (
    jspb.Message.getWrapperField(this, proto.prototype.block_header, 1));
};


/** @param {?proto.prototype.block_header|undefined} value */
proto.prototype.signed_block_header.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.prototype.signed_block_header.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.signed_block_header.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional signature_type witness_signature = 2;
 * @return {?proto.prototype.signature_type}
 */
proto.prototype.signed_block_header.prototype.getWitnessSignature = function() {
  return /** @type{?proto.prototype.signature_type} */ (
    jspb.Message.getWrapperField(this, prototype_type_pb.signature_type, 2));
};


/** @param {?proto.prototype.signature_type|undefined} value */
proto.prototype.signed_block_header.prototype.setWitnessSignature = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.prototype.signed_block_header.prototype.clearWitnessSignature = function() {
  this.setWitnessSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.signed_block_header.prototype.hasWitnessSignature = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prototype.signed_block = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prototype.signed_block.repeatedFields_, null);
};
goog.inherits(proto.prototype.signed_block, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.prototype.signed_block.displayName = 'proto.prototype.signed_block';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prototype.signed_block.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prototype.signed_block.prototype.toObject = function(opt_includeInstance) {
  return proto.prototype.signed_block.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prototype.signed_block} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.signed_block.toObject = function(includeInstance, msg) {
  var f, obj = {
    signedHeader: (f = msg.getSignedHeader()) && proto.prototype.signed_block_header.toObject(includeInstance, f),
    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
    proto.prototype.transaction_wrapper.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prototype.signed_block}
 */
proto.prototype.signed_block.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prototype.signed_block;
  return proto.prototype.signed_block.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prototype.signed_block} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prototype.signed_block}
 */
proto.prototype.signed_block.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prototype.signed_block_header;
      reader.readMessage(value,proto.prototype.signed_block_header.deserializeBinaryFromReader);
      msg.setSignedHeader(value);
      break;
    case 2:
      var value = new proto.prototype.transaction_wrapper;
      reader.readMessage(value,proto.prototype.transaction_wrapper.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prototype.signed_block.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prototype.signed_block.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prototype.signed_block} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.signed_block.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignedHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.prototype.signed_block_header.serializeBinaryToWriter
    );
  }
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.prototype.transaction_wrapper.serializeBinaryToWriter
    );
  }
};


/**
 * optional signed_block_header signed_header = 1;
 * @return {?proto.prototype.signed_block_header}
 */
proto.prototype.signed_block.prototype.getSignedHeader = function() {
  return /** @type{?proto.prototype.signed_block_header} */ (
    jspb.Message.getWrapperField(this, proto.prototype.signed_block_header, 1));
};


/** @param {?proto.prototype.signed_block_header|undefined} value */
proto.prototype.signed_block.prototype.setSignedHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.prototype.signed_block.prototype.clearSignedHeader = function() {
  this.setSignedHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.signed_block.prototype.hasSignedHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated transaction_wrapper transactions = 2;
 * @return {!Array<!proto.prototype.transaction_wrapper>}
 */
proto.prototype.signed_block.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.prototype.transaction_wrapper>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prototype.transaction_wrapper, 2));
};


/** @param {!Array<!proto.prototype.transaction_wrapper>} value */
proto.prototype.signed_block.prototype.setTransactionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prototype.transaction_wrapper=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prototype.transaction_wrapper}
 */
proto.prototype.signed_block.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prototype.transaction_wrapper, opt_index);
};


proto.prototype.signed_block.prototype.clearTransactionsList = function() {
  this.setTransactionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prototype.empty_signed_block = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prototype.empty_signed_block, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.prototype.empty_signed_block.displayName = 'proto.prototype.empty_signed_block';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prototype.empty_signed_block.prototype.toObject = function(opt_includeInstance) {
  return proto.prototype.empty_signed_block.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prototype.empty_signed_block} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.empty_signed_block.toObject = function(includeInstance, msg) {
  var f, obj = {
    signedHeader: (f = msg.getSignedHeader()) && proto.prototype.signed_block_header.toObject(includeInstance, f),
    trxCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prototype.empty_signed_block}
 */
proto.prototype.empty_signed_block.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prototype.empty_signed_block;
  return proto.prototype.empty_signed_block.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prototype.empty_signed_block} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prototype.empty_signed_block}
 */
proto.prototype.empty_signed_block.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.prototype.signed_block_header;
      reader.readMessage(value,proto.prototype.signed_block_header.deserializeBinaryFromReader);
      msg.setSignedHeader(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTrxCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prototype.empty_signed_block.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prototype.empty_signed_block.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prototype.empty_signed_block} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prototype.empty_signed_block.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignedHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.prototype.signed_block_header.serializeBinaryToWriter
    );
  }
  f = message.getTrxCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional signed_block_header signed_header = 1;
 * @return {?proto.prototype.signed_block_header}
 */
proto.prototype.empty_signed_block.prototype.getSignedHeader = function() {
  return /** @type{?proto.prototype.signed_block_header} */ (
    jspb.Message.getWrapperField(this, proto.prototype.signed_block_header, 1));
};


/** @param {?proto.prototype.signed_block_header|undefined} value */
proto.prototype.empty_signed_block.prototype.setSignedHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.prototype.empty_signed_block.prototype.clearSignedHeader = function() {
  this.setSignedHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.prototype.empty_signed_block.prototype.hasSignedHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 trx_count = 2;
 * @return {number}
 */
proto.prototype.empty_signed_block.prototype.getTrxCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.prototype.empty_signed_block.prototype.setTrxCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.prototype);
